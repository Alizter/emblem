#!/usr/bin/automake

FORMATTER = clang-format
FORMAT_FLAGS = -Werror -i
FORMAT_CHECKER = clang-format
FORMAT_CHECKER_FLAGS = -Werror -i --dry-run

SUFFIXES = .moon

# Required by libtoolize
ACLOCAL_AMFLAGS = -I m4
AM_YFLAGS = -d

M4 = m4 -P
M4FLAGS = -E

EM_LEX_PREFIX = em_

BUILT_SOURCES = src/parser/em-emblem-parser.h src/ext/lua-lib-load.c <BUILT_SRCS>

# Binary and sources
bin_PROGRAMS = em
em_SOURCES = <SRC_FILES> src/parser/emblem-lexer.l src/parser/emblem-parser.y
em_CFLAGS = -Wall -Wextra -Wpedantic -Werror -pedantic-errors -std=gnu2x <DEPS_CFLAGS> # -fanalyzer
em_LDADD = -lm <DEPS_LIBS>
em_LFLAGS = # -Cfar
em_YFLAGS = -Wall -Wdangling-alias -Wno-yacc -Werror -LC --locations -l -d -rall

LEX = flex

define moon2c
	(awk -f scripts/moon-module-make.awk -v module_name="$(shell scripts/module_name $<)" | moonc -- | luac -o - - | ./scripts/bin2c.lua /dev/stdin $(shell scripts/module_name $<)) < $< > $@
endef

src/ext/lua-lib-load.c: scripts/lua-lib-load.c.sh
	. $< > $@

src/ext/lib/std/std.lc: src/ext/lib/std/std.moon scripts/bin2c.lua scripts/module_name
	$(moon2c)

src/argp.h: src/argp.c
src/argp.h src/argp.c: em.yml ./scripts/arggen
	./scripts/arggen -xc ./src/argp < $<

./src/pp/ignore_warning.h: ./src/pp/ignore_warning.h.m4
	$(M4) $(M4FLAGS) $< > $@

em.yml:;

# Add documentation
dist_doc_DATA = README.md LICENSE ChangeLog em.1.gz

ChangeLog: ./scripts/changelog.sh
	. $< > $@

./em.1.gz: ./em.yml ./scripts/mangen
	(./scripts/mangen | gzip - -) < $< > $@

# Add tests
TESTS = check_em
check_PROGRAMS = check_em
check_em_SOURCES = <TEST_FILES>
check_em_CFLAGS = -Wall -Wextra -Wpedantic -Werror -pedantic-errors -std=gnu18 <CHECK_DEPS_CFLAGS>
check_em_LDADD = $(em_LDADD) <CHECK_DEPS_LIBS>

doc: docs/html/index.html
.PHONY: doc

doc-coverage: scripts/doxcov docs/html/index.html
	./scripts/doxcov
.PHONY: doc-coverage

docs/html/index.html: scripts/docgen $(em_SOURCES)
	./scripts/docgen

./scripts/arggen ./scripts/changelog.sh ./scripts/mangen ./scripts/docgen:;

format:
	$(FORMATTER) $(FORMAT_FLAGS) $(shell find src/ -type f -regex '.*.[ch]') $(shell find check/ -type f -regex '.*.[ch]')
.PHONY: format

format-check:
	$(FORMAT_CHECKER) $(FORMAT_CHECKER_FLAGS) $(shell find src/ -type f -regex '.*.[ch]') $(shell find check/ -type f -regex '.*.[ch]')
.PHONY: format-check

EXTRA_DIST = ./scripts/arggen ./scripts/changelog.sh ./scripts/mangen ./em.yml
CLEANFILES = *.log *.swp src/argp.c src/argp.h src/pp/ignore_warning.h ChangeLog em.1.gz y.tab.h docs/html/ docs/man/ docs/rst/ docs/xml/ docs/_static/css/style.css *.bak GPATH GRTAGS GTAGS d_tags src/parser/*emblem-lexer.c src/parser/*emblem-lexer.h src/parser/*emblem-parser.h src/parser/*emblem-parser.c lex.$(EM_LEX_PREFIX).c
